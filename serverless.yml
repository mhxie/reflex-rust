# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!
service: reflex
provider:
  name: aws
  runtime: rust
  memorySize: 256
  timeout: 70
  # you can overwrite defaults here
  stage: dev
  region: us-west-2

# you can add statements to the Lambda function's IAM Role here
# iamRoleStatements:
#   - Effect: Allow
#     Action:
#       - ec2:CreateNetworkInterface
#       - ec2:DescribeNetworkInterfaces
#       - ec2:DeleteNetworkInterface
#     Resource:
#       - 'arn:aws:ec2:us-west-2:*:*'
#   - Effect: "Allow"
#     Action:
#       - "s3:ListBucket"
#     Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ServerlessDeploymentBucket" } ] ]  }
#   - Effect: "Allow"
#     Action:
#       - "s3:PutObject"
#     Resource:
#       Fn::Join:
#         - ""
#         - - "arn:aws:s3:::"
#           - "Ref" : "ServerlessDeploymentBucket"
#           - "/*"

# you can define service wide environment variables here
#  environment:
#    variable1: value1

package:
  individually: true
  # exclude:
  #   -./**
  #   -mock-client/**
  # include:
  #   -serverless-client/**
  #   -mock/**

plugins:
  - serverless-rust

functions:
  # handler value syntax is `{cargo-package-name}.{bin-name}`
  # or `{cargo-package-name}` for short when you are building a
  # default bin for a given package.
  rust-cli:
    handler: bench-client
    vpc:
      securityGroupIds:
        - ${env:SECURITY_GROUP_ID}
      subnetIds:
        - ${env:SUBNET_ID}

  # rust-cli-x:
  #   handler: bench-client
  #   vpc:
  #     securityGroupIds:
  #       - ${env:SECURITY_GROUP_ID_x}
  #     subnetIds:
  #       - ${env:SUBNET_ID_x}

#    Define function environment variables here
#    environment:
#      variable2: value2

# you can add CloudFormation resource templates here
#resources:
#  Resources:
#    NewResource:
#      Type: AWS::S3::Bucket
#      Properties:
#        BucketName: my-new-bucket
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"
custom:
  # this section customizes of the default
  # serverless-rust plugin settings
  rust:
    # flags passed to cargo
    # cargoFlags: '--features enable-awesome'
    # custom docker tag
    dockerTag: "0.3.0-rust-1.45.0"
    #  custom docker image
    dockerImage: "softprops/lambda-rust"
